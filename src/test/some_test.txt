import "math"

fun map2(func, list) {
    let i = 0
    while i < len(list) {
        // print(i)
        list[i] = func(list[i])
        i = i + 1
    }
}

fun mul2(n) n*2

fun square(n) n*n

fun pow(base, power) {
    let res = 1;
    let i = 0;
    while i < power {
        res = res * base
        i = i + 1
    }
    return res
}

fun list_equality(list1, list2) {
    if len(list1) != len(list2)
        return false

    let i = 0;
    while i < len(list1) {
        if list1[i] != list2[i]
            return false

        i = i + 1
    }
    return true
}

let a = [1.0, 3.0]
map(math.sqrt, a)
assert(list_equality(a, [1.0, 1.7320508]))

let b = [4, 6]
map2(square, b)
assert(list_equality(b, [16, 36]))

let c = [9, 34]
map(mul2, c)
assert(list_equality(c, [18, 68]))

let d = [4.0, 49.0]
map2(math.sqrt, d)
assert(list_equality(d, [2.0, 7.0]))


assert(pow(2, 10) == 1024)

assert(
    4 
    |> mul2 
    |> square
    == 64 
)
